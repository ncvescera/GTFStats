(function(){"use strict";var t={4966:function(t,a,l){l(8937);var n=l(9242),e=l(3396);const o={class:"container"},r={class:"row"},u={class:"col"},i={key:0,class:"d-flex justify-content-center"},c=(0,e._)("div",{class:"spinner-border",role:"status"},[(0,e._)("span",{class:"visually-hidden"},"Loading...")],-1),d=[c];function s(t,a,l,n,c,s){const _=(0,e.up)("EnemyCard");return(0,e.wg)(),(0,e.iD)("div",o,[(0,e._)("div",r,[(0,e._)("div",u,[t.isloading?((0,e.wg)(),(0,e.iD)("div",i,d)):((0,e.wg)(!0),(0,e.iD)(e.HY,{key:1},(0,e.Ko)(t.enemydata,(t=>((0,e.wg)(),(0,e.j4)(_,{key:t,data:t},null,8,["data"])))),128))])])])}var _=l(7139);const m={class:"card"},p=["href","aria-controls"],f={class:"enemy-name"},g=["id"],v={class:"card-body"};function h(t,a,l,n,o,r){const u=(0,e.up)("HealthSection"),i=(0,e.up)("DamageSection"),c=(0,e.up)("CollisionSection"),d=(0,e.up)("GlueSection");return(0,e.wg)(),(0,e.iD)("div",m,[(0,e._)("div",{class:"card-header","data-bs-toggle":"collapse",href:`#collapse${l.data.persistentID}`,role:"button","aria-expanded":"false","aria-controls":`collapse${l.data.persistentID}`},[(0,e._)("b",f,(0,_.zw)(l.data.name.replace("_"," ")),1)],8,p),(0,e._)("div",{class:"collapse",id:`collapse${l.data.persistentID}`},[(0,e._)("div",v,[(0,e.Wm)(u,{data:l.data},null,8,["data"]),(0,e.Wm)(i,{data:l.data},null,8,["data"]),(0,e.Wm)(c,{data:l.data},null,8,["data"]),(0,e.Wm)(d,{data:l.data},null,8,["data"])])],8,g)])}const b=(0,e._)("h3",null,"Collision 🧱",-1),y={class:"table table-striped"},w=(0,e._)("colgroup",null,[(0,e._)("col",{class:"col-10"}),(0,e._)("col",{class:"col-2"})],-1),D=(0,e._)("td",null,"Can be Pushed?",-1),H=(0,e._)("td",null,"Collision Minimum MoveSpeed Modifier",-1),S=(0,e._)("td",null,"Collision Movement Reduction",-1),M=(0,e._)("td",null,"Collision Radius",-1);function C(t,a,l,n,o,r){return(0,e.wg)(),(0,e.iD)(e.HY,null,[b,(0,e._)("table",y,[w,(0,e._)("tbody",null,[(0,e._)("tr",null,[D,(0,e._)("td",null,(0,_.zw)(l.data.CanBePushed?"✅":"❌"),1)]),(0,e._)("tr",null,[H,(0,e._)("td",null,(0,_.zw)(l.data.EnemyCollisionMinimumMoveSpeedModifier),1)]),(0,e._)("tr",null,[S,(0,e._)("td",null,(0,_.zw)(l.data.EnemyCollisionPlayerMovementReduction),1)]),(0,e._)("tr",null,[M,(0,e._)("td",null,(0,_.zw)(l.data.EnemyCollisionRadius),1)])])])],64)}var k={name:"CollisionSection",props:["data"]},O=l(89);const z=(0,O.Z)(k,[["render",C]]);var j=z;const T=(0,e._)("h3",null,"Damage 🗡️",-1),x={class:"table table-striped"},E=(0,e._)("colgroup",null,[(0,e._)("col",{class:"col-10"}),(0,e._)("col",{class:"col-2"})],-1),G=(0,e._)("td",null,"Melee Attack Damage",-1),P=(0,e._)("td",null,"Tentacle Attack Damage",-1);function A(t,a,l,n,o,r){return(0,e.wg)(),(0,e.iD)(e.HY,null,[T,(0,e._)("table",x,[E,(0,e._)("tbody",null,[(0,e._)("tr",null,[G,(0,e._)("td",null,(0,_.zw)(l.data.MeleeAttackDamage),1)]),(0,e._)("tr",null,[P,(0,e._)("td",null,(0,_.zw)(l.data.TentacleAttackDamage),1)])])])],64)}var B={name:"DamageSection",props:["data"]};const W=(0,O.Z)(B,[["render",A]]);var Z=W;const F=(0,e._)("h3",null,"C-Foam 💦",-1),I={class:"table table-striped"},R=(0,e._)("colgroup",null,[(0,e._)("col",{class:"col-10"}),(0,e._)("col",{class:"col-2"})],-1),Y=(0,e._)("td",null,"Glue Tolerance",-1),$=(0,e._)("td",null,"Glue FadeOut Time",-1);function U(t,a,l,n,o,r){return(0,e.wg)(),(0,e.iD)(e.HY,null,[F,(0,e._)("table",I,[R,(0,e._)("tbody",null,[(0,e._)("tr",null,[Y,(0,e._)("td",null,(0,_.zw)(l.data.GlueTolerance),1)]),(0,e._)("tr",null,[$,(0,e._)("td",null,(0,_.zw)(l.data.GlueFadeOutTime),1)])])])],64)}var K={name:"GlueSection",props:["data"]};const L=(0,O.Z)(K,[["render",U]]);var q=L;const J=(0,e._)("h3",null,"Health 🩸",-1),N={class:"table table-striped"},Q=(0,e._)("colgroup",null,[(0,e._)("col",{class:"col-10"}),(0,e._)("col",{class:"col-2"})],-1),V=(0,e._)("td",null,"Max Health",-1),X=(0,e._)("td",null,"BodyPart Health",-1),tt=(0,e._)("td",null,"Weakspot Damage Multi",-1),at=(0,e._)("td",null,"Armor Damage Multi",-1),lt=(0,e._)("td",null,"Damage until Hit React",-1);function nt(t,a,l,n,o,r){return(0,e.wg)(),(0,e.iD)(e.HY,null,[J,(0,e._)("table",N,[Q,(0,e._)("tbody",null,[(0,e._)("tr",null,[V,(0,e._)("td",null,(0,_.zw)(l.data.Health.HealthMax),1)]),(0,e._)("tr",null,[X,(0,e._)("td",null,(0,_.zw)(l.data.Health.BodypartHealth),1)]),(0,e._)("tr",null,[tt,(0,e._)("td",null,"x"+(0,_.zw)(l.data.Health.WeakspotDamageMulti),1)]),(0,e._)("tr",null,[at,(0,e._)("td",null,"x"+(0,_.zw)(l.data.Health.ArmorDamageMulti),1)]),(0,e._)("tr",null,[lt,(0,e._)("td",null,(0,_.zw)(l.data.Health.DamageUntilHitreact),1)])])])],64)}var et={name:"HealthSection",props:["data"]};const ot=(0,O.Z)(et,[["render",nt]]);var rt=ot,ut={name:"EnemyCard",components:{HealthSection:rt,DamageSection:Z,CollisionSection:j,GlueSection:q},props:["data"]};const it=(0,O.Z)(ut,[["render",h],["__scopeId","data-v-6591c8f8"]]);var ct=it;const dt=l(6265)["default"];var st={name:"App",components:{EnemyCard:ct},data:function(){return{isloading:!0,enemydata:[]}},mounted(){document.title="GTFStats",console.log("getting data .."),this.getData()},methods:{getData(){dt.get("https://raw.githubusercontent.com/UntiIted/OriginalDataBlocks/master/EnemyBalancingDataBlock.json").then((t=>{this.enemydata=t.data.Blocks,this.enemydata.sort(((t,a)=>t.name>a.name?1:a.name>t.name?-1:0)),this.isloading=!1}))}}};const _t=(0,O.Z)(st,[["render",s]]);var mt=_t;(0,n.ri)(mt).mount("#app")}},a={};function l(n){var e=a[n];if(void 0!==e)return e.exports;var o=a[n]={exports:{}};return t[n](o,o.exports,l),o.exports}l.m=t,function(){var t=[];l.O=function(a,n,e,o){if(!n){var r=1/0;for(d=0;d<t.length;d++){n=t[d][0],e=t[d][1],o=t[d][2];for(var u=!0,i=0;i<n.length;i++)(!1&o||r>=o)&&Object.keys(l.O).every((function(t){return l.O[t](n[i])}))?n.splice(i--,1):(u=!1,o<r&&(r=o));if(u){t.splice(d--,1);var c=e();void 0!==c&&(a=c)}}return a}o=o||0;for(var d=t.length;d>0&&t[d-1][2]>o;d--)t[d]=t[d-1];t[d]=[n,e,o]}}(),function(){l.n=function(t){var a=t&&t.__esModule?function(){return t["default"]}:function(){return t};return l.d(a,{a:a}),a}}(),function(){l.d=function(t,a){for(var n in a)l.o(a,n)&&!l.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:a[n]})}}(),function(){l.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){l.o=function(t,a){return Object.prototype.hasOwnProperty.call(t,a)}}(),function(){l.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}}(),function(){var t={143:0};l.O.j=function(a){return 0===t[a]};var a=function(a,n){var e,o,r=n[0],u=n[1],i=n[2],c=0;if(r.some((function(a){return 0!==t[a]}))){for(e in u)l.o(u,e)&&(l.m[e]=u[e]);if(i)var d=i(l)}for(a&&a(n);c<r.length;c++)o=r[c],l.o(t,o)&&t[o]&&t[o][0](),t[o]=0;return l.O(d)},n=self["webpackChunkgtfstats"]=self["webpackChunkgtfstats"]||[];n.forEach(a.bind(null,0)),n.push=a.bind(null,n.push.bind(n))}();var n=l.O(void 0,[998],(function(){return l(4966)}));n=l.O(n)})();
//# sourceMappingURL=app.4102924a.js.map